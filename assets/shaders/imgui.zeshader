shader "ImGui"
{
	struct VertexInput
	{
		float2 position : POSITION;
		float2 texcoord : TEXCOORD0;
		float4 color : TEXCOORD1;
	};

	struct VertexOutput
	{
		float4 position : SV_POSITION;
		float2 texcoord : TEXCOORD0;
		float4 color : TEXCOORD1;
	};

	vertex
	{
		cbuffer GlobalData : register(b0)
		{
			float2 translate;
			float2 scale;
		};

		VertexOutput main(VertexInput input)
		{
			VertexOutput output;

			output.position = float4(input.position * scale + translate, 0.0, 1.0);
			output.texcoord = input.texcoord;
			output.color = input.color;

			return output;
		}
	}

	fragment
	{
		Texture2D texture : register(t2);
		SamplerState texture_sampler : register(s1);

		float4 main(VertexOutput input) : SV_TARGET0
		{
			return input.color * texture.Sample(texture_sampler, input.texcoord);
		}
	}
}